openapi: 3.0.3
info:
  title: Hylo Travel AI API
  description: Multi-agent travel planning system with intelligent LLM routing
  version: 1.0.0
  contact:
    name: Hylo Travel AI Team
    email: team@hylo.ai

servers:
  - url: https://hylo-travel.vercel.app/api
    description: Production server (Vercel Edge Functions)
  - url: http://localhost:3000/api
    description: Development server

paths:
  /llm/route:
    post:
      summary: Main LLM routing endpoint for multi-agent processing
      description: |
        Processes travel planning requests through 4 specialized agents with intelligent
        LLM provider routing based on query complexity. Supports streaming responses.
      operationId: processLLMRequest
      tags:
        - LLM Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LLMRequest'
            examples:
              travelPlanning:
                summary: Travel planning request
                value:
                  sessionId: '550e8400-e29b-41d4-a716-446655440000'
                  agentId: 1
                  prompt: 'Plan a 7-day cultural trip to Japan for 2 people'
                  maxTokens: 2000
                  temperature: 0.7
                  metadata:
                    requestId: 'req_123456789'
                    timestamp: '2025-09-17T10:00:00Z'
      responses:
        '200':
          description: Successful LLM response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/LLMStreamChunk'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Service unavailable (all providers down)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /llm/health:
    get:
      summary: LLM provider health status
      description: Returns health status of all configured LLM providers
      operationId: getLLMHealth
      tags:
        - Health Monitoring
      responses:
        '200':
          description: Provider health status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderHealth'

  /health/system:
    get:
      summary: System health check
      description: Comprehensive system health including all components and metrics
      operationId: getSystemHealth
      tags:
        - Health Monitoring
      responses:
        '200':
          description: System health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHealth'
        '503':
          description: System unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHealth'

  /providers/status:
    get:
      summary: Provider status and capabilities
      description: Returns status and capabilities of all LLM providers
      operationId: getProviderStatus
      tags:
        - Provider Management
      responses:
        '200':
          description: Provider status information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderConfig'

  /dns/verification:
    post:
      summary: DNS verification service
      description: Verifies DNS configuration for deployment readiness
      operationId: verifyDNS
      tags:
        - DNS Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  format: hostname
                  example: 'travel.hylo.ai'
              required:
                - domain
      responses:
        '200':
          description: DNS verification successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [verified, pending, failed]
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [A, AAAA, CNAME, TXT]
                        name:
                          type: string
                        value:
                          type: string
                        verified:
                          type: boolean
        '400':
          description: Invalid domain format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LLMRequest:
      type: object
      required:
        - sessionId
        - agentId
        - prompt
        - metadata
      properties:
        sessionId:
          type: string
          format: uuid
          description: Session identifier for request tracking
        agentId:
          type: integer
          enum: [1, 2, 3, 4]
          description: Agent ID (1=Data Gatherer, 2=Info Gatherer, 3=Strategist, 4=Compiler)
        prompt:
          type: string
          minLength: 1
          maxLength: 10000
          description: User prompt or agent instruction
        maxTokens:
          type: integer
          minimum: 1
          maximum: 4000
          default: 2000
          description: Maximum tokens to generate
        temperature:
          type: number
          minimum: 0
          maximum: 1
          default: 0.7
          description: Sampling temperature for response generation
        metadata:
          $ref: '#/components/schemas/RequestMetadata'

    RequestMetadata:
      type: object
      required:
        - requestId
        - timestamp
      properties:
        requestId:
          type: string
          format: uuid
          description: Unique request identifier
        timestamp:
          type: string
          format: date-time
          description: Request timestamp in ISO 8601 format
        userAgent:
          type: string
          description: Client user agent string
        ipAddress:
          type: string
          format: ipv4
          description: Client IP address (for rate limiting)

    LLMResponse:
      type: object
      required:
        - requestId
        - providerId
        - modelName
        - content
        - tokenUsage
        - cost
        - latency
        - timestamp
      properties:
        requestId:
          type: string
          format: uuid
          description: Original request identifier
        providerId:
          type: string
          enum: [groq, gemini, cerebras]
          description: LLM provider used for response
        modelName:
          type: string
          description: Specific model name used
          example: 'llama-3.1-70b-versatile'
        content:
          type: string
          description: Generated response content
        tokenUsage:
          $ref: '#/components/schemas/TokenUsage'
        cost:
          type: number
          format: float
          minimum: 0
          description: Cost in USD for this request
        latency:
          type: integer
          minimum: 0
          description: Response latency in milliseconds
        timestamp:
          type: string
          format: date-time
          description: Response timestamp in ISO 8601 format
        error:
          type: string
          description: Error message if request failed

    LLMStreamChunk:
      type: object
      required:
        - requestId
        - chunkId
        - content
        - isComplete
        - timestamp
      properties:
        requestId:
          type: string
          format: uuid
          description: Original request identifier
        chunkId:
          type: integer
          minimum: 0
          description: Sequential chunk identifier
        content:
          type: string
          description: Partial response content
        isComplete:
          type: boolean
          description: True if this is the final chunk
        timestamp:
          type: string
          format: date-time
          description: Chunk timestamp in ISO 8601 format

    TokenUsage:
      type: object
      required:
        - promptTokens
        - completionTokens
        - totalTokens
      properties:
        promptTokens:
          type: integer
          minimum: 0
          description: Tokens used in the prompt
        completionTokens:
          type: integer
          minimum: 0
          description: Tokens generated in completion
        totalTokens:
          type: integer
          minimum: 0
          description: Total tokens used (prompt + completion)

    ProviderHealth:
      type: object
      required:
        - providerId
        - status
        - lastCheck
        - responseTime
        - errorRate
        - consecutiveFailures
        - circuitBreakerOpen
      properties:
        providerId:
          type: string
          enum: [groq, gemini, cerebras]
          description: Provider identifier
        status:
          type: string
          enum: [healthy, degraded, unavailable]
          description: Current provider status
        lastCheck:
          type: string
          format: date-time
          description: Last health check timestamp
        responseTime:
          type: integer
          minimum: 0
          description: Average response time in milliseconds
        errorRate:
          type: number
          minimum: 0
          maximum: 1
          description: Error rate as decimal (0.1 = 10%)
        consecutiveFailures:
          type: integer
          minimum: 0
          description: Number of consecutive failures
        circuitBreakerOpen:
          type: boolean
          description: Whether circuit breaker is open for this provider

    ProviderConfig:
      type: object
      required:
        - id
        - name
        - models
        - limits
        - pricing
        - capabilities
      properties:
        id:
          type: string
          enum: [groq, gemini, cerebras]
          description: Provider identifier
        name:
          type: string
          description: Human-readable provider name
        models:
          type: object
          properties:
            default:
              type: string
              description: Default model for general use
            reasoning:
              type: string
              description: Model optimized for reasoning tasks
            fast:
              type: string
              description: Model optimized for speed
        limits:
          type: object
          properties:
            maxTokens:
              type: integer
              description: Maximum tokens per request
            timeoutMs:
              type: integer
              description: Request timeout in milliseconds
            rateLimit:
              type: integer
              description: Requests per minute limit
        pricing:
          type: object
          properties:
            inputCostPer1MTokens:
              type: number
              format: float
              description: Cost per 1M input tokens in USD
            outputCostPer1MTokens:
              type: number
              format: float
              description: Cost per 1M output tokens in USD
        capabilities:
          type: object
          properties:
            streaming:
              type: boolean
              description: Supports streaming responses
            multimodal:
              type: boolean
              description: Supports image/audio inputs
            reasoning:
              type: boolean
              description: Optimized for complex reasoning
            speed:
              type: string
              enum: [fast, medium, slow]
              description: Relative speed classification

    SystemHealth:
      type: object
      required:
        - status
        - timestamp
        - version
        - uptime
        - components
        - metrics
      properties:
        status:
          type: string
          enum: [healthy, degraded, unavailable]
          description: Overall system status
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        version:
          type: string
          description: Application version
          example: '1.0.0'
        uptime:
          type: integer
          minimum: 0
          description: System uptime in seconds
        components:
          type: array
          items:
            $ref: '#/components/schemas/ComponentHealth'
        metrics:
          type: object
          properties:
            requestsPerMinute:
              type: number
              minimum: 0
              description: Current requests per minute
            averageLatency:
              type: number
              minimum: 0
              description: Average response latency in milliseconds
            errorRate:
              type: number
              minimum: 0
              maximum: 1
              description: Error rate as decimal
            costPerRequest:
              type: number
              minimum: 0
              description: Average cost per request in USD

    ComponentHealth:
      type: object
      required:
        - name
        - status
        - lastCheck
      properties:
        name:
          type: string
          description: Component name
          example: 'LLM Provider Groq'
        status:
          type: string
          enum: [healthy, degraded, unavailable]
          description: Component status
        lastCheck:
          type: string
          format: date-time
          description: Last check timestamp
        message:
          type: string
          description: Status message or error description
        details:
          type: object
          description: Additional component-specific details

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
        - requestId
      properties:
        error:
          type: string
          description: Error code or type
          example: 'RATE_LIMIT_EXCEEDED'
        message:
          type: string
          description: Human-readable error message
          example: 'Request rate limit exceeded. Please try again later.'
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        requestId:
          type: string
          format: uuid
          description: Request identifier for tracking
        details:
          type: object
          description: Additional error details

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authenticated requests

security:
  - ApiKeyAuth: []

tags:
  - name: LLM Processing
    description: Core LLM operations and multi-agent processing
  - name: Health Monitoring
    description: System and component health monitoring
  - name: Provider Management
    description: LLM provider status and configuration
  - name: DNS Management
    description: DNS verification and management operations
