openapi: 3.0.3
info:
  title: Hylo Travel AI - RAG Multi-Agent API
  description: Session-aware RAG multi-agent travel planning system with vector search, real-time web grounding, and personalized itinerary generation
  version: 1.0.0
  contact:
    name: Hylo Travel AI
    url: https://hylo.travel
    email: api@hylo.travel

servers:
  - url: https://api.hylo.travel
    description: Production API
  - url: https://api-staging.hylo.travel
    description: Staging API
  - url: http://localhost:3000
    description: Local development

paths:
  /api/rag/save-form:
    post:
      summary: Save form data to session
      description: Captures form data, stores in session, and triggers background vectorization
      operationId: saveFormData
      tags:
        - Session Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveFormRequest'
      responses:
        '200':
          description: Form data saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveFormResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/rag/generate-itinerary:
    post:
      summary: Generate personalized itinerary
      description: Uses RAG pipeline to create structured itinerary with real-time web data
      operationId: generateItinerary
      tags:
        - Itinerary Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RAGRequest'
      responses:
        '200':
          description: Itinerary generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItineraryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          $ref: '#/components/responses/BudgetExceeded'
        '404':
          $ref: '#/components/responses/SessionNotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/rag/ask-question:
    post:
      summary: Ask follow-up question
      description: Context-aware Q&A using session data and vector search
      operationId: askQuestion
      tags:
        - Question Answering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
      responses:
        '200':
          description: Question answered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/SessionNotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/rag/session-status:
    get:
      summary: Get session status
      description: Retrieve session lifecycle information and processing status
      operationId: getSessionStatus
      tags:
        - Session Management
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatus'
        '404':
          $ref: '#/components/responses/SessionNotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/rag/flush-session:
    delete:
      summary: Flush session data
      description: Clear session data from all storage layers
      operationId: flushSession
      tags:
        - Session Management
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session flushed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlushResponse'
        '404':
          $ref: '#/components/responses/SessionNotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/rag/health:
    get:
      summary: RAG system health check
      description: Check health of vector database, session storage, and LLM providers
      operationId: getRAGHealth
      tags:
        - Health Monitoring
      responses:
        '200':
          description: Health status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAGHealthStatus'
        '503':
          description: Service degraded or unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAGHealthStatus'

components:
  schemas:
    SaveFormRequest:
      type: object
      required:
        - session_id
        - form_id
        - form_data
      properties:
        session_id:
          type: string
          format: uuid
          description: Unique session identifier
        form_id:
          type: string
          enum:
            - TripDetailsForm
            - TravelGroupSelector
            - TravelInterests
            - ItineraryInclusions
            - TravelExperience
            - TripVibe
            - SampleDays
            - DinnerChoice
            - TripNickname
            - PreferencesModal
            - ContactForm
          description: Form component identifier
        form_data:
          type: object
          description: Form data payload (schema varies by form_id)
        options:
          type: object
          properties:
            trigger_vectorization:
              type: boolean
              default: true
              description: Whether to trigger immediate vectorization
            extend_ttl:
              type: boolean
              default: false
              description: Request extended session TTL (7 days)

    SaveFormResponse:
      type: object
      required:
        - success
        - session_id
        - timestamp
      properties:
        success:
          type: boolean
        session_id:
          type: string
          format: uuid
        form_id:
          type: string
        vectorization_status:
          type: string
          enum: [queued, processing, completed, failed]
        timestamp:
          type: string
          format: date-time

    RAGRequest:
      type: object
      required:
        - session_id
        - operation
        - request_id
      properties:
        session_id:
          type: string
          format: uuid
        operation:
          type: string
          enum: [generate_itinerary, ask_question, refine_plan, get_recommendations]
        query:
          type: string
          maxLength: 1000
          description: Natural language query (required for ask_question)
        options:
          $ref: '#/components/schemas/RAGOptions'
        request_id:
          type: string
          format: uuid
          description: Unique request identifier for tracing
        client_info:
          $ref: '#/components/schemas/ClientInfo'

    RAGOptions:
      type: object
      properties:
        max_results:
          type: integer
          minimum: 1
          maximum: 20
          default: 5
        similarity_threshold:
          type: number
          minimum: 0
          maximum: 1
          default: 0.7
        include_cross_session:
          type: boolean
          default: false
        include_web_search:
          type: boolean
          default: true
        web_search_queries:
          type: array
          items:
            type: string
          maxItems: 5
        complexity_override:
          type: string
          enum: [simple, medium, complex]
        response_format:
          type: string
          enum: [structured, conversational, mixed]
          default: structured
        include_citations:
          type: boolean
          default: true
        include_alternatives:
          type: boolean
          default: false
        preferred_provider:
          type: string
          enum: [groq, gemini, cerebras]
        max_tokens:
          type: integer
          minimum: 100
          maximum: 8000
        temperature:
          type: number
          minimum: 0
          maximum: 2

    ClientInfo:
      type: object
      properties:
        user_agent:
          type: string
        timezone:
          type: string
          description: IANA timezone identifier
        language:
          type: string
          pattern: '^[a-z]{2}$'
          description: ISO 639-1 language code
        platform:
          type: string
          enum: [web, mobile, api]

    ItineraryResponse:
      type: object
      required:
        - request_id
        - session_id
        - timestamp
        - data
      properties:
        request_id:
          type: string
          format: uuid
        session_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          required:
            - type
            - itinerary
            - summary
          properties:
            type:
              type: string
              enum: [itinerary]
            itinerary:
              type: array
              items:
                $ref: '#/components/schemas/ItineraryDay'
            summary:
              type: string
            total_budget_estimate:
              $ref: '#/components/schemas/BudgetEstimate'
            actions:
              type: array
              items:
                $ref: '#/components/schemas/ActionLink'
            alternatives:
              type: array
              items:
                $ref: '#/components/schemas/ItineraryAlternative'
        processing_time_ms:
          type: number
        tokens_used:
          $ref: '#/components/schemas/TokenUsage'
        citations:
          type: array
          items:
            $ref: '#/components/schemas/Citation'
        confidence_score:
          type: number
          minimum: 0
          maximum: 1

    QuestionRequest:
      type: object
      required:
        - session_id
        - question
        - request_id
      properties:
        session_id:
          type: string
          format: uuid
        question:
          type: string
          minLength: 5
          maxLength: 500
        request_id:
          type: string
          format: uuid
        options:
          type: object
          properties:
            include_context:
              type: boolean
              default: true
            max_context_items:
              type: integer
              minimum: 1
              maximum: 10
              default: 3

    QuestionResponse:
      type: object
      required:
        - request_id
        - session_id
        - timestamp
        - data
      properties:
        request_id:
          type: string
          format: uuid
        session_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          required:
            - type
            - answer
          properties:
            type:
              type: string
              enum: [question_answer]
            answer:
              type: string
            related_suggestions:
              type: array
              items:
                type: string
            context_used:
              type: array
              items:
                type: string
              description: Which form data was referenced
        processing_time_ms:
          type: number
        tokens_used:
          $ref: '#/components/schemas/TokenUsage'
        citations:
          type: array
          items:
            $ref: '#/components/schemas/Citation'
        confidence_score:
          type: number
          minimum: 0
          maximum: 1

    ItineraryDay:
      type: object
      required:
        - date
        - location
        - activities
      properties:
        date:
          type: string
          format: date
        location:
          type: string
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        meals:
          type: array
          items:
            $ref: '#/components/schemas/MealRecommendation'
        accommodation:
          $ref: '#/components/schemas/AccommodationRecommendation'
        transportation:
          $ref: '#/components/schemas/TransportationRecommendation'
        budget_estimate:
          $ref: '#/components/schemas/DayBudgetEstimate'

    Activity:
      type: object
      required:
        - id
        - name
        - description
        - location
        - time_slot
        - duration_minutes
        - category
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        time_slot:
          $ref: '#/components/schemas/TimeSlot'
        duration_minutes:
          type: integer
          minimum: 15
        cost_estimate:
          $ref: '#/components/schemas/CostEstimate'
        booking_info:
          $ref: '#/components/schemas/BookingInfo'
        category:
          type: string
          enum: [food, culture, adventure, nature, history, nightlife, shopping, relaxation]
        difficulty:
          type: string
          enum: [easy, moderate, challenging]
        accessibility_friendly:
          type: boolean

    Location:
      type: object
      required:
        - name
        - city
        - country
      properties:
        name:
          type: string
        address:
          type: string
        coordinates:
          type: object
          properties:
            lat:
              type: number
              minimum: -90
              maximum: 90
            lng:
              type: number
              minimum: -180
              maximum: 180
        neighborhood:
          type: string
        city:
          type: string
        country:
          type: string

    TimeSlot:
      type: object
      required:
        - start_time
        - end_time
        - flexibility
      properties:
        start_time:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: HH:MM format
        end_time:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: HH:MM format
        flexibility:
          type: string
          enum: [fixed, flexible, approximate]

    BudgetEstimate:
      type: object
      required:
        - currency
        - total
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: ISO 4217 currency code
        total:
          type: number
          minimum: 0
        breakdown:
          type: object
          properties:
            accommodation:
              type: number
            activities:
              type: number
            meals:
              type: number
            transportation:
              type: number
            miscellaneous:
              type: number
        confidence:
          type: string
          enum: [low, medium, high]

    CostEstimate:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        amount:
          type: number
          minimum: 0
        range:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        source:
          type: string
          description: Where the estimate came from

    BookingInfo:
      type: object
      properties:
        booking_url:
          type: string
          format: uri
        phone:
          type: string
        email:
          type: string
          format: email
        advance_booking_required:
          type: boolean
        cancellation_policy:
          type: string

    ActionLink:
      type: object
      required:
        - type
        - label
        - url
      properties:
        type:
          type: string
          enum: [booking, information, directions, contact]
        label:
          type: string
        url:
          type: string
          format: uri
        description:
          type: string

    Citation:
      type: object
      required:
        - id
        - source_type
        - title
        - snippet
        - accessed_at
      properties:
        id:
          type: string
        source_type:
          type: string
          enum: [web_search, user_session, knowledge_base, llm_generation]
        url:
          type: string
          format: uri
        title:
          type: string
        snippet:
          type: string
        accessed_at:
          type: string
          format: date-time
        relevance_score:
          type: number
          minimum: 0
          maximum: 1

    TokenUsage:
      type: object
      required:
        - provider
        - operation
        - total_tokens
        - cost_usd
      properties:
        provider:
          type: string
          enum: [groq, gemini, cerebras, huggingface]
        operation:
          type: string
          enum: [embedding, search, generation, web_search]
        input_tokens:
          type: integer
          minimum: 0
        output_tokens:
          type: integer
          minimum: 0
        total_tokens:
          type: integer
          minimum: 0
        cost_usd:
          type: number
          minimum: 0
        model_used:
          type: string
        latency_ms:
          type: number
          minimum: 0
        success:
          type: boolean
        error_type:
          type: string

    SessionStatus:
      type: object
      required:
        - session_id
        - status
        - created_at
        - expires_at
      properties:
        session_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [active, completed, expired, processing]
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        last_activity_at:
          type: string
          format: date-time
        form_count:
          type: integer
          minimum: 0
        vectorization_status:
          type: string
          enum: [pending, processing, completed, failed]
        budget_usage:
          type: object
          properties:
            cost_usd:
              type: number
            operations_count:
              type: integer
            daily_limit_usd:
              type: number
            remaining_budget_usd:
              type: number

    FlushResponse:
      type: object
      required:
        - success
        - session_id
        - timestamp
      properties:
        success:
          type: boolean
        session_id:
          type: string
          format: uuid
        items_deleted:
          type: object
          properties:
            session_records:
              type: integer
            vector_records:
              type: integer
            cache_entries:
              type: integer
        timestamp:
          type: string
          format: date-time

    RAGHealthStatus:
      type: object
      required:
        - overall_status
        - timestamp
        - components
      properties:
        overall_status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        components:
          type: array
          items:
            type: object
            required:
              - name
              - status
              - last_check
            properties:
              name:
                type: string
                enum: [qdrant, supabase, upstash, groq, gemini, cerebras, huggingface]
              status:
                type: string
                enum: [healthy, degraded, unhealthy]
              response_time_ms:
                type: number
              error_rate:
                type: number
                minimum: 0
                maximum: 1
              last_check:
                type: string
                format: date-time
              details:
                type: object
        performance_metrics:
          type: object
          properties:
            p50_response_time_ms:
              type: number
            p95_response_time_ms:
              type: number
            p99_response_time_ms:
              type: number
            requests_per_minute:
              type: number
            active_sessions:
              type: integer
            error_rate_5m:
              type: number
            error_rate_1h:
              type: number
            vector_store_usage_mb:
              type: number
            session_store_usage_mb:
              type: number
            cache_hit_rate:
              type: number

    MealRecommendation:
      type: object
      required:
        - name
        - type
        - location
      properties:
        name:
          type: string
        type:
          type: string
          enum: [breakfast, lunch, dinner, snack, drinks]
        location:
          $ref: '#/components/schemas/Location'
        cuisine:
          type: string
        price_range:
          type: string
          enum: [budget, moderate, expensive]
        dietary_accommodations:
          type: array
          items:
            type: string
        booking_info:
          $ref: '#/components/schemas/BookingInfo'

    AccommodationRecommendation:
      type: object
      required:
        - name
        - type
        - location
      properties:
        name:
          type: string
        type:
          type: string
          enum: [hotel, airbnb, hostel, resort, camping]
        location:
          $ref: '#/components/schemas/Location'
        price_per_night:
          $ref: '#/components/schemas/CostEstimate'
        amenities:
          type: array
          items:
            type: string
        rating:
          type: number
          minimum: 0
          maximum: 5
        booking_info:
          $ref: '#/components/schemas/BookingInfo'

    TransportationRecommendation:
      type: object
      required:
        - type
        - from
        - to
      properties:
        type:
          type: string
          enum: [walk, public_transport, taxi, rental_car, flight, train]
        from:
          $ref: '#/components/schemas/Location'
        to:
          $ref: '#/components/schemas/Location'
        duration_minutes:
          type: integer
          minimum: 1
        cost_estimate:
          $ref: '#/components/schemas/CostEstimate'
        booking_info:
          $ref: '#/components/schemas/BookingInfo'
        schedule:
          type: string
          description: Schedule information for public transport

    DayBudgetEstimate:
      type: object
      required:
        - currency
        - total
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        total:
          type: number
          minimum: 0
        activities:
          type: number
        meals:
          type: number
        transportation:
          type: number

    ItineraryAlternative:
      type: object
      required:
        - title
        - description
        - modifications
      properties:
        title:
          type: string
        description:
          type: string
        modifications:
          type: array
          items:
            type: object
            required:
              - type
              - description
            properties:
              type:
                type: string
                enum: [activity_change, time_adjustment, location_change, budget_optimization]
              description:
                type: string
              impact:
                type: string
                enum: [minor, moderate, significant]

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            type: object
            required:
              - error
              - message
            properties:
              error:
                type: string
                enum: [bad_request]
              message:
                type: string
              details:
                type: object

    SessionNotFound:
      description: Session not found or expired
      content:
        application/json:
          schema:
            type: object
            required:
              - error
              - message
            properties:
              error:
                type: string
                enum: [session_not_found]
              message:
                type: string
              session_id:
                type: string
                format: uuid

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            required:
              - error
              - message
              - retry_after
            properties:
              error:
                type: string
                enum: [rate_limited]
              message:
                type: string
              retry_after:
                type: integer
                description: Seconds to wait before retry

    BudgetExceeded:
      description: Daily or monthly budget limit exceeded
      content:
        application/json:
          schema:
            type: object
            required:
              - error
              - message
            properties:
              error:
                type: string
                enum: [budget_exceeded]
              message:
                type: string
              current_usage:
                type: number
              limit:
                type: number
              reset_time:
                type: string
                format: date-time

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            required:
              - error
              - message
            properties:
              error:
                type: string
                enum: [internal_error]
              message:
                type: string
              request_id:
                type: string
                format: uuid

  securitySchemes:
    SessionToken:
      type: apiKey
      in: header
      name: X-Session-Token
      description: Session token for temporary authentication

security:
  - SessionToken: []

tags:
  - name: Session Management
    description: Session lifecycle and data management operations
  - name: Itinerary Generation
    description: RAG-powered itinerary creation and personalization
  - name: Question Answering
    description: Context-aware Q&A using session data
  - name: Health Monitoring
    description: System health and performance monitoring
